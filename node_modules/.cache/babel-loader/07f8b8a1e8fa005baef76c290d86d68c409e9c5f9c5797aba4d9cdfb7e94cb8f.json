{"ast":null,"code":"var _jsxFileName = \"/home/divum/ragul86100/ragul86100test/onlinecodeeditior-with-redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport addhtmlcodeReducer from \"./reduxstore/reduxhtml\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst persistconfig = {\n  key: \"root\",\n  version: \"1\",\n  storage\n};\nconst reducerp = combineReducers({\n  html: addhtmlcodeReducer\n});\nconst persistreducer = persistReducer(persistconfig, reducerp);\nconst mystore = configureStore({\n  reducer: persistreducer\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nlet persist = persistStore(mystore);\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: mystore,\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      persistor: persist,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","configureStore","Provider","storage","persistReducer","combineReducers","PersistGate","persistStore","addhtmlcodeReducer","jsxDEV","_jsxDEV","persistconfig","key","version","reducerp","html","persistreducer","mystore","reducer","root","createRoot","document","getElementById","persist","render","StrictMode","children","store","persistor","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/divum/ragul86100/ragul86100test/onlinecodeeditior-with-redux/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport addhtmlcodeReducer from \"./reduxstore/reduxhtml\"\n\n\n\n\nconst persistconfig={\n  key:\"root\",\n  version:\"1\",\n  storage\n};\n\n\nconst reducerp=combineReducers({\n  html:addhtmlcodeReducer,\n\n})\nconst persistreducer=persistReducer(persistconfig,reducerp);\nconst mystore=configureStore({\n  reducer:persistreducer\n})\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n\n\nlet persist=persistStore(mystore);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={mystore}>\n      <PersistGate persistor={persist}>\n    <App />\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,kBAAkB,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKvD,MAAMC,aAAa,GAAC;EAClBC,GAAG,EAAC,MAAM;EACVC,OAAO,EAAC,GAAG;EACXV;AACF,CAAC;AAGD,MAAMW,QAAQ,GAACT,eAAe,CAAC;EAC7BU,IAAI,EAACP;AAEP,CAAC,CAAC;AACF,MAAMQ,cAAc,GAACZ,cAAc,CAACO,aAAa,EAACG,QAAQ,CAAC;AAC3D,MAAMG,OAAO,GAAChB,cAAc,CAAC;EAC3BiB,OAAO,EAACF;AACV,CAAC,CAAC;AACF,MAAMG,IAAI,GAAGrB,QAAQ,CAACsB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAIjE,IAAIC,OAAO,GAAChB,YAAY,CAACU,OAAO,CAAC;AAEjCE,IAAI,CAACK,MAAM,eACTd,OAAA,CAACb,KAAK,CAAC4B,UAAU;EAAAC,QAAA,eACfhB,OAAA,CAACR,QAAQ;IAACyB,KAAK,EAAEV,OAAQ;IAAAS,QAAA,eACvBhB,OAAA,CAACJ,WAAW;MAACsB,SAAS,EAAEL,OAAQ;MAAAG,QAAA,eAClChB,OAAA,CAACX,GAAG;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACK,CACpB,CAAC;;AAED;AACA;AACA;AACAhC,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}